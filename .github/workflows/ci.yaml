name: Build

on:
  # push:
  #   branches:
  #     - main
  release:
    types:
      - published
  workflow_dispatch:

permissions:
  contents: write

jobs:
  source:
    name: Source
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.base_ref || github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true
      - name: Gen Source
        run: |
          REV_ID=$(git tag --points-at HEAD)
          if [ -z "${REV_ID}" ]; then
            REV_ID=$(git rev-parse --short HEAD)
          fi
          mkdir -p rtsproxy-${{ env.BRANCH_NAME }}
          git ls-files --recurse-submodules | tar c -O -T- | tar x -C rtsproxy-${{ env.BRANCH_NAME }}
          echo ${REV_ID} > rtsproxy-${{ env.BRANCH_NAME }}/.version
          tar cJf rtsproxy-${{ env.BRANCH_NAME }}.tar.xz rtsproxy-${{ env.BRANCH_NAME }}
      - name: Upload source
        uses: actions/upload-artifact@v4
        with:
          name: rtsproxy-${{ env.BRANCH_NAME }}.tar.xz
          path: rtsproxy-${{ env.BRANCH_NAME }}.tar.xz
          if-no-files-found: error
          retention-days: 1


  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: arm64
            cpu_family: aarch64
            cpu: aarch64
            tool: aarch64-unknown-linux-musl
          - name: arm32
            tool: arm-unknown-linux-musleabi
            cpu_family: arm
            cpu: arm
          - name: arm32hf
            tool: arm-unknown-linux-musleabihf
            cpu_family: arm
            cpu: arm32hf
          - name: arm32v7
            tool: armv7-unknown-linux-musleabi
            cpu_family: arm
            cpu: arm32v7
          - name: arm32v7hf
            tool: armv7-unknown-linux-musleabihf
            cpu_family: arm
            cpu: arm32v7hf
          - name: i586
            tool: i586-unknown-linux-musl
            cpu_family: x86_64
            cpu: i586
          - name: i686
            tool: i686-unknown-linux-musl
            cpu_family: x86_64
            cpu: i686
          - name: loong64
            tool: loongarch64-unknown-linux-musl
            cpu_family: loongarch64
            cpu: loongarch64
          - name: m68k
            tool: m68k-unknown-linux-musl
            cpu_family: m68k
            cpu: m68k
          - name: microblazeel
            tool: microblazeel-xilinx-linux-musl
            cpu_family: microblazeel
            cpu: microblazeel
          - name: microblaze
            tool: microblaze-xilinx-linux-musl
            cpu_family: microblaze
            cpu: microblaze
          - name: mips64el
            tool: mips64el-unknown-linux-musl
            cpu_family: mips64
            cpu: mips64el
          - name: mips64
            tool: mips64-unknown-linux-musl
            cpu_family: mips64
            cpu: mips64
          - name: mips32el
            tool: mipsel-unknown-linux-musl
            cpu_family: mips64
            cpu: mips32el
          - name: mips32elsf
            tool: mipsel-unknown-linux-muslsf
            cpu_family: mips64
            cpu: mips32elsf
          - name: mips32
            tool: mips-unknown-linux-musl
            cpu_family: mips
            cpu: mips
          - name: mips32sf
            tool: mips-unknown-linux-muslsf
            cpu_family: mips
            cpu: mips32sf
          - name: or1k
            tool: or1k-unknown-linux-musl
            cpu_family: or1k
            cpu: or1k
          - name: powerpc64le
            tool: powerpc64le-unknown-linux-musl
            cpu_family: ppc64
            cpu: powerpc64le
          - name: powerpc64
            tool: powerpc64-unknown-linux-musl
            cpu_family: ppc64
            cpu: ppc64
          - name: powerpcle
            tool: powerpcle-unknown-linux-musl
            cpu_family: ppc
            cpu: powerpcle
          - name: powerpc
            tool: powerpc-unknown-linux-musl
            cpu_family: ppc
            cpu: ppc
          - name: riscv32
            tool: riscv32-unknown-linux-musl
            cpu_family: riscv32
            cpu: riscv32
          - name: riscv64
            tool: riscv64-unknown-linux-musl
            cpu_family: riscv64
            cpu: riscv64
          - name: s390x
            tool: s390x-ibm-linux-musl
            cpu_family: s390x
            cpu: s390x
          - name: sh4
            tool: sh4-multilib-linux-musl
            cpu_family: sh4
            cpu: sh4
          - name: x86_64
            cpu_family: x86_64
            cpu: x86_64
            tool: x86_64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true
      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y ninja-build meson

      - name: Download and setup musl-cross toolchain
        run: |
          sudo mkdir -p /opt/x-tools
          wget https://github.com/cross-tools/musl-cross/releases/download/20250929/${{ matrix.tool }}.tar.xz
          sudo tar xf ${{ matrix.tool }}.tar.xz -C /opt/x-tools


      - name: Set up meson crossfile for musl
        run: |
          echo '[host_machine]' > musl-crossfile-${{ matrix.name }}.ini
          echo "system = 'linux'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "cpu_family = '${{ matrix.cpu_family }}'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "cpu = '${{ matrix.cpu }}'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "endian = 'little'" >> musl-crossfile-${{ matrix.name }}.ini
          echo '' >> musl-crossfile-${{ matrix.name }}.ini
          echo '[binaries]' >> musl-crossfile-${{ matrix.name }}.ini
          echo "cpp = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-g++'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "ar = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-ar'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "as = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-as'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "ld = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-ld'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "nm = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-nm'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "objcopy = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-objcopy'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "objdump = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-objdump'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "ranlib = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-ranlib'" >> musl-crossfile-${{ matrix.name }}.ini
          echo "strip = '/opt/x-tools/${{ matrix.tool }}/bin/${{ matrix.tool }}-strip'" >> musl-crossfile-${{ matrix.name }}.ini

      - name: Build ${{ matrix.name }}
        run: |
          rm -rf builddir
          meson setup builddir --cross-file=musl-crossfile-${{ matrix.name }}.ini --strip --buildtype=release -Disstatic=true
          meson compile -C builddir -j$(nproc)
          meson install -C builddir
          cp bin/rtsproxy rtsproxy-linux-${{ matrix.name }}
      - name: Upload ${{ matrix.name }}
        uses: actions/upload-artifact@v4
        with:
          name: rtsproxy-linux-${{ matrix.name }}
          path: rtsproxy-linux-${{ matrix.name }}
          if-no-files-found: error
          retention-days: 1

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - source
      - linux
    if: github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          pattern: "rtsproxy-*"
          merge-multiple: true
      - name: Upload release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for i in release/rtsproxy-*; do
            gh release upload ${{ github.event.release.tag_name }} $i
          done
